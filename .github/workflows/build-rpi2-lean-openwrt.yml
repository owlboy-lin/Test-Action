#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build Raspberry Pi 2 Lean's OpenWrt

on: 
  release:
    types: [published]
  push:
    branches: 
      - master
    paths:
      - 'rpi2-lean-openwrt.config'
#  schedule:
#    - cron: 0 18 * * *
#  watch:
#    types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: rpi2-lean-openwrt.config
  DIY_SH: lean-openwrt.sh
  DOWNLOAD_URL_FILE: Tmp-Link-Url.txt
  TZ: Asia/Shanghai
  FREE_UP_DISK: true
  SSH_ACTIONS: false
  UPLOAD_TMP_LINK: true


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/*
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc

    - name: Free up disk space
      if: env.FREE_UP_DISK == 'true'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /usr/share/dotnet
        docker rmi `docker images -q`
        sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Clone source code
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update Feeds
      run: |
       cd openwrt
       echo "src-git lienol https://github.com/Lienol/openwrt-package" >> feeds.conf.default
       ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH
        make defconfig

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Download package
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"

    - name: Extract Gz Files
      if: steps.compile.outputs.status == 'success'
      run: |
        cd openwrt/bin/targets/bcm27xx/bcm2709
        gzip -qdc openwrt-bcm27xx-bcm2709-rpi-2-squashfs-factory.img.gz > openwrt-bcm27xx-bcm2709-rpi-2-squashfs-factory.img || true
        gzip -qdc openwrt-bcm27xx-bcm2709-rpi-2-squashfs-sysupgrade.img.gz > openwrt-bcm27xx-bcm2709-rpi-2-squashfs-sysupgrade.img || true
        gzip -qdc openwrt-bcm27xx-bcm2709-rpi-2-ext4-factory.img.gz > openwrt-bcm27xx-bcm2709-rpi-2-ext4-factory.img || true
        gzip -qdc openwrt-bcm27xx-bcm2709-rpi-2-ext4-sysupgrade.img.gz > openwrt-bcm27xx-bcm2709-rpi-2-ext4-sysupgrade.img || true

    - name: Generate New Sha256sum File
      if: steps.compile.outputs.status == 'success'
      run: |
        cd openwrt/bin/targets/bcm27xx/bcm2709
        mv sha256sums sha256sums.orig
        sha256sum openwrt* > sha256sums

    - name: Upload Config
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: config.seed
        path: openwrt/bin/targets/bcm27xx/bcm2709/config.seed
        
    - name: Upload Packages
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: packages
        path: openwrt/bin/packages/arm_cortex-a7_neon-vfpv4/
        
    - name: Upload Packages Info
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: openwrt-bcm27xx-bcm2709-rpi-2.manifest
        path: openwrt/bin/targets/bcm27xx/bcm2709/openwrt-bcm27xx-bcm2709-rpi-2.manifest
        
    - name: Upload Kernel Packages
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: kernel-packages
        path: openwrt/bin/targets/bcm27xx/bcm2709/packages/
        
    - name: Upload RootFS Archive
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: openwrt-bcm27xx-bcm2709-rpi-2-rootfs.tar.gz
        path: openwrt/bin/targets/bcm27xx/bcm2709/openwrt-bcm27xx-bcm2709-rpi-2-rootfs.tar.gz
        
    - name: Upload SquashFS Factory Image
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: openwrt-bcm27xx-bcm2709-rpi-2-squashfs-factory.img
        path: openwrt/bin/targets/bcm27xx/bcm2709/openwrt-bcm27xx-bcm2709-rpi-2-squashfs-factory.img
        
    - name: Upload SquashFS Sysupgrade Image
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: openwrt-bcm27xx-bcm2709-rpi-2-squashfs-sysupgrade.img
        path: openwrt/bin/targets/bcm27xx/bcm2709/openwrt-bcm27xx-bcm2709-rpi-2-squashfs-sysupgrade.img
        
    - name: Upload Ext4 Factory Image
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: openwrt-bcm27xx-bcm2709-rpi-2-ext4-factory.img
        path: openwrt/bin/targets/bcm27xx/bcm2709/openwrt-bcm27xx-bcm2709-rpi-2-ext4-factory.img
        
    - name: Upload Ext4 Sysupgrade Image
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: openwrt-bcm27xx-bcm2709-rpi-2-ext4-sysupgrade.img
        path: openwrt/bin/targets/bcm27xx/bcm2709/openwrt-bcm27xx-bcm2709-rpi-2-ext4-sysupgrade.img

    - name: Upload Images Sha256sums
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: sha256sums
        path: openwrt/bin/targets/bcm27xx/bcm2709/sha256sums
        
    - name: Upload Files to Tmp.Link
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_TMP_LINK == 'true'
      run: |
        # Upload Packages to Tmp.Link
        cd openwrt/bin/packages
        zip -q -r packages.zip *
        echo "packages.zip" >> ../targets/bcm27xx/bcm2709/$DOWNLOAD_URL_FILE
        curl -k -F "file=@packages.zip" -F "token=${{ secrets.TMP_LINK_TOKEN }}" -F "model=0" -X POST "https://connect.tmp.link/api_v2/cli_uploader" -s >> ../targets/bcm27xx/bcm2709/$DOWNLOAD_URL_FILE

        # Compress Kernel-Packages
        cd ../targets/bcm27xx/bcm2709
        zip -q -r kernel-packages.zip packages

        # Delete *.img Files
        rm -f *.img
        
        # Restore Orig sha256sums
        rm sha256sums
        mv sha256sums.orig sha256sums
        
        # Upload Firmware/ImageBuilder/Kernel-Packages/PackagesInfo/RootFS/SDK/Toolchain to Tmp.Link
        find . -maxdepth 1 ! -name "$DOWNLOAD_URL_FILE" -type f -print -exec echo {} >> $DOWNLOAD_URL_FILE \; -exec curl -k -F "file=@{}" -F "token=${{ secrets.TMP_LINK_TOKEN }}" -F "model=0" -X POST "https://connect.tmp.link/api_v2/cli_uploader" -s >> $DOWNLOAD_URL_FILE \;

        # Remove No Need Contents
        sed -i 's/\.\///g' $DOWNLOAD_URL_FILE
        sed -i '/^Upload.*/d' $DOWNLOAD_URL_FILE
        sed -i '/^Thank.*/d' $DOWNLOAD_URL_FILE
        sed -i '/Download/G' $DOWNLOAD_URL_FILE

    - name: Upload Tmp-Link-Url.txt
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_TMP_LINK == 'true'
      with:
        name: Tmp-Link-Url.txt
        path: openwrt/bin/targets/bcm27xx/bcm2709/Tmp-Link-Url.txt
